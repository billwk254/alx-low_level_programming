# Makefile for school

# Compiler
CC = gcc

# Source files
SRC = main.c school.c

# Object files
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Header file
HEADER = m.h

# Define RM variable
RM = rm -f

# Rule to build the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) $(OBJ) -o $(NAME)

# Rule to compile source files to object files
%.o: %.c $(HEADER)
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to remove all temporary files and the executable
clean:
	$(RM) $(OBJ)

# Rule to remove object files
oclean:
	$(RM) $(OBJ)

# Rule to remove all temporary files, object files, and the executable
fclean: clean
	$(RM) $(NAME)

# Rule to force recompilation of all source files
re: fclean all

# Prevent make from treating clean, oclean, fclean, and re as file targets
.PHONY: all clean oclean fclean re

# Default rule: build the executable
all: $(NAME)

